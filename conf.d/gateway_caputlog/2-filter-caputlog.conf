# vi: sw=2 ts=2 sts=2 expandtab

filter {
 grok {
   # Get the gateway instance from its filename:
   pattern_definitions => {
     GATEWAY => "\S+"
   }
   named_captures_only => true
   match => ["path", "/cds/group/pcds/gateway/logs/%{GATEWAY:gateway}/gateway-put\.log"]
 }
 # Mostly for testing - but set gateway regardless
 if ! [gateway] {
   mutate {
     add_field => { 
       "gateway" => "%{[path]}"
     }
   }
 }
 grok {
   pattern_definitions => {
     MONTHNAM => "(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)"
     TIMESTAMP => "%{MONTHNAM} %{MONTHDAY} %{TIME}"
     PV => "\S+"
     IOC => "\S+"
     STRINGVAL => "\S+"
     ANY => ".*?"
   }
   named_captures_only => true
   tag_on_failure => true
   # IOC=... TIMESTAMP HOSTNAME USER PV NEW_VALUE old=OLD_VALUE[, OLD_VALUES]*
   match => {
     message => "%{TIMESTAMP:timestamp} %{USER:[log][client_username]}@%{HOSTNAME:[log][client_hostname]} %{PV:[log][pvname]} %{NUMBER:[log][new_value]} old=%{NUMBER:[log][old_value]}(, %{ANY:[log][older_values]})?$"
   }
 }
 date {
   # Extract the timestamp from the message as a proper logstash timestamp
   # field type, but since the IOC's clock might not be accurate we don't
   # replace the locally generated @timestamp.
   match => ["timestamp", "MMM dd HH:mm:ss"]
   locale => "en"
   target => "[log][timestamp]"
 }
 mutate {
   add_field => { 
     "[log][iocname]" => "%{[gateway]}-gateway"
     "[log][schema]" => "caputlog-event-0"
   }
 }
}
