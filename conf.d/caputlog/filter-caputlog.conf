# vi: sw=2 ts=2 sts=2 expandtab

filter {
  grok {
    pattern_definitions => {
      MONTHNAM => "(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)"
      TIMESTAMP => "%{MONTHDAY}-%{MONTHNAM}-%{YEAR} %{TIME}"
      PV => "\S+"
      IOC => "\S+"
      STRINGVAL => "\S+"
    }
    named_captures_only => true
    tag_on_failure => true
    # IOC=... TIMESTAMP HOSTNAME USER PV {{pv_data}}
    match => {
      message => "(IOC=%{IOC:[log][iocname]} )?%{TIMESTAMP:timestamp} %{HOSTNAME:[log][client_hostname]} %{USER:[log][client_username]} %{PV:[log][pvname]} %{GREEDYDATA:pv_data}$"
    }
  }
  grok {
    break_on_match => true
    named_captures_only => true
    tag_on_failure => true

    match => {
      pv_data => [
        # new=1 old=2 min=1 max=2
        "new=%{NUMBER:[log][new_value]} old=%{NUMBER:[log][old_value]} min=%{NUMBER:[log][min_value]} max=%{NUMBER:[log][max_value]}$",

        # new=1 old=2
        "new=%{NUMBER:[log][new_value]} old=%{NUMBER:[log][old_value]}$",
        
        # new=stringa old=stringb
        "new=%{DATA:[log][new_value]} old=%{DATA:[log][old_value]}$"
      ]
    }
  }
  date {
    # Extract the timestamp from the message as a proper logstash timestamp
    # field type, but since the IOC's clock might not be accurate we don't
    # replace the locally generated @timestamp.
    match => ["timestamp", "dd-MMM-yy HH:mm:ss"]
    locale => "en"
    target => "[log][timestamp]"
  }
  mutate {
    add_field => { "[log][schema]"=> "caputlog-event-0" }
    remove_field => [ "pv_data" ]
  }
}
